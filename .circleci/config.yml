---
version: 2.1

orbs:
  # ms-teams: cloudradar-monitoring/ms-teams@1.0.0
  ms-teams:
    commands:
      report:
        parameters:
          webhook_url:
            description: The Microsoft Teams Webhook URL.
            type: string
          only_on_fail:
            description: Whether send notification only if previous steps failed
            type: boolean
            default: false
        steps:
          - run:
              name: Prepare Template
              when: always
              command: |
                SHORT_SHA1=`echo -n $CIRCLE_SHA1 | head -c 7`

                if [ `echo "$CIRCLE_REPOSITORY_URL" | grep "^git@github.com"` ]; then
                  COMMIT_LINK=\[$SHORT_SHA1\]\(https://github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/commit/$CIRCLE_SHA1\)
                elif [ `echo "$CIRCLE_REPOSITORY_URL" | grep "^git@bitbucket.org"` ]; then
                  COMMIT_LINK=\[$SHORT_SHA1\]\(https://bitbucket.org/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/commit/$CIRCLE_SHA1\)
                else
                  >&2 echo unknown version control system: $CIRCLE_REPOSITORY_URL
                  fail
                fi

                # Note that the "\<<" in the heredoc declaration is escaped from
                # CircleCI's parameters syntax.
                MS_TEAMS_MSG_TEMPLATE=$(cat \<<END_HEREDOC
                {
                  "@type": "MessageCard",
                  "@context": "http://schema.org/extensions",
                  "themeCdocker_jobolor": "__theme_color__",
                  "summary": "CircleCI Build Notification",
                  "sections": [
                    {
                      "activityTitle": "__build_status__: $CIRCLE_PROJECT_REPONAME build [#${CIRCLE_BUILD_NUM}]($CIRCLE_BUILD_URL)",
                      "facts": [
                        {
                          "name": "Git ref",
                          "value": "$CIRCLE_BRANCH $CIRCLE_TAG"
                        },
                        {
                          "name": "Commit",
                          "value": "$COMMIT_LINK"
                        }
                      ],
                      "markdown": true
                    }
                  ]
                }
                END_HEREDOC
                )
                echo "$MS_TEAMS_MSG_TEMPLATE" > /tmp/ms_teams_message
          - unless:
              condition: << parameters.only_on_fail >>
              steps:
              - run:
                  name: Report Build Success
                  command: |
                    MSG_PATH=/tmp/ms_teams_success_message
                    sed -e 's/__build_status__/Success/' -e 's/__theme_color__/14a603/' \
                        /tmp/ms_teams_message > $MSG_PATH
                    curl --fail -H "Content-Type: application/json" \
                          --data-binary @$MSG_PATH \
                          << parameters.webhook_url >>
                  when: on_success
          - run:
              name: Report Build Failure
              command: |
                MSG_PATH=/tmp/ms_teams_failure_message
                sed -e 's/__build_status__/Failed/' -e 's/__theme_color__/e2091d/' \
                    /tmp/ms_teams_message > $MSG_PATH
                curl --fail -H "Content-Type: application/json" \
                      --data-binary @$MSG_PATH \
                      << parameters.webhook_url >>
              when: on_fail

docker_job_setup: &docker_job
  docker:
    - image: cloudradario/go-build:0.0.16
  working_directory: /go/src/github.com/cloudradar-monitoring/cagent

attach_workspace: &workspace
  attach_workspace:
    at: /go/src/github.com/cloudradar-monitoring

common_post_steps_setup: &common_post_steps
  post-steps:
    - ms-teams/report:
        only_on_fail: false
        webhook_url: $MS_TEAMS_WEBHOOK_URL

jobs:
  get-source:
    <<: *docker_job
    steps:
      - checkout
      - persist_to_workspace:
          root: /go/src/github.com/cloudradar-monitoring
          paths:
            - cagent

  test:
    <<: *docker_job
    steps:
      - <<: *workspace
      - run: make test

  test-goreleaser:
    <<: *docker_job
    steps:
      - <<: *workspace
      - run: make goreleaser-snapshot

  build-goreleaser:
    <<: *docker_job
    steps:
      - <<: *workspace
      - run:
          name: Build binaries
          command: make goreleaser-rm-dist
      - persist_to_workspace:
          root: /go/src/github.com/cloudradar-monitoring
          paths:
            - cagent

  build-sign-msi:
    <<: *docker_job
    steps:
      - <<: *workspace
      - add_ssh_keys:
          fingerprints:
            - "b3:b7:b0:59:57:1a:bc:82:6c:3c:91:d6:23:19:f2:08"
            - "53:d2:08:dc:1a:4e:9e:29:00:d4:ba:1e:b7:5d:16:25"
      - run:
          name: Sign msi files
          command: make windows-sign

  build-aptly:
    <<: *docker_job
    steps:
      - <<: *workspace
      - add_ssh_keys:
          fingerprints:
            - "53:d2:08:dc:1a:4e:9e:29:00:d4:ba:1e:b7:5d:16:25"
      - run:
          name: Update aptly repository
          command: make aptly

  build-createrepo:
    <<: *docker_job
    steps:
      - <<: *workspace
      - add_ssh_keys:
          fingerprints:
            - "53:d2:08:dc:1a:4e:9e:29:00:d4:ba:1e:b7:5d:16:25"
      - run:
          name: Update createrepo repository
          command: make createrepo

  build-synology-spk:
    <<: *docker_job
    steps:
      - <<: *workspace
      - run:
          name: Build Synology packages
          command: make synology-spk

  release-github:
    <<: *docker_job
    steps:
      - run:
          name: Fetch release changelog so we can preserve it when releasing
          command: "CHANGELOGRAW=$(curl -H \"Authorization: token ${GITHUB_TOKEN}\"  https://api.github.com/repos/cloudradar-monitoring/cagent/releases | jq \".[0].body\") && echo \"export CHANGELOGRAW=$CHANGELOGRAW\" >> $BASH_ENV"
      - run:
          name: Publish release
          shell: /bin/bash
          command: |
            if [[ ${CIRCLE_TAG} =~ -{1}((0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$ ]] ; then
              echo -e ${CHANGELOGRAW} | github-release edit --user cloudradar-monitoring --repo cagent --tag ${CIRCLE_TAG} --pre-release --description -
            else
              echo -e ${CHANGELOGRAW} | github-release edit --user cloudradar-monitoring --repo cagent --tag ${CIRCLE_TAG} --description -
            fi
          when: on_success
      - run:
          name: Delete GitHub release in case something went wrong
          command: github-release delete --user cloudradar-monitoring --repo cagent --tag ${CIRCLE_TAG}
          when: on_fail

workflows:
  version: 2
  test-on-commit:
    jobs:
      - get-source:
          <<: *common_post_steps
          filters:
            tags:
              ignore: /.*/
      - test:
          <<: *common_post_steps
          requires:
            - get-source
          filters:
            tags:
              ignore: /.*/
      - test-goreleaser:
          <<: *common_post_steps
          requires:
            - get-source
          filters:
            tags:
              ignore: /.*/

  release:
    jobs:
      - get-source:
          <<: *common_post_steps
          context: cloudradar
          filters:
            tags:
              only: /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$/
            branches:
              ignore: /.*/
      - test:
          <<: *common_post_steps
          context: cloudradar
          requires:
            - get-source
          filters:
            tags:
              only: /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$/
            branches:
              ignore: /.*/
      - build-goreleaser:
          <<: *common_post_steps
          context: cloudradar
          requires:
            - test
          filters:
            tags:
              only: /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$/
            branches:
              ignore: /.*/
      - build-sign-msi:
          <<: *common_post_steps
          context: cloudradar
          requires:
            - build-goreleaser
          filters:
            tags:
              only: /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$/
            branches:
              ignore: /.*/
      - build-aptly:
          <<: *common_post_steps
          context: cloudradar
          requires:
            - build-goreleaser
          filters:
            tags:
              only: /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/
            branches:
              ignore: /.*/
      - build-createrepo:
          <<: *common_post_steps
          context: cloudradar
          requires:
            - build-goreleaser
          filters:
            tags:
              only: /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/
            branches:
              ignore: /.*/
      - release-github:
          <<: *common_post_steps
          context: cloudradar
          requires:
            - build-sign-msi
            - build-synology-spk
          filters:
            tags:
              only: /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$/
            branches:
              ignore: /.*/
      - build-synology-spk:
          <<: *common_post_steps
          context: cloudradar
          requires:
            - build-goreleaser
          filters:
            tags:
              only: /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$/
            branches:
              ignore: /.*/
